import nmap 
import json

class VulnScanner:
  def __init__(self, host):
    from PYProtocol import BASE_DIR
    self.nm = nmap.PortScanner()
    self.start_port = 1 
    self.max_port   = 65535
    self.cve_list = []
    self.all_exploits = []
    self.host = host
    self.BASE_DIR = BASE_DIR

  def scan(self, email):
    with open(f"{self.BASE_DIR}/Scanners/scans.json", "r") as f:
            data = json.load(f)

    with open(f"{self.BASE_DIR}/Scanners/scans.json", "w") as f:
      data.update({email: {"exploits": [], "status": 1}})
      json.dump(data, f, indent=2)
    print("scanning...")
    self.nm.scan(self.host, f"{self.start_port}-{self.max_port}", "-sT -sV -Pn")
    try:
      ports = self.nm[self.host]['tcp'].keys()
    except:
      ports = []
      print("No services found")

    services_scanned = []

    for port in ports:
      state = self.nm[self.host]['tcp'][port]['state']
      service = self.nm[self.host]['tcp'][port]['name']
      product = self.nm[self.host]['tcp'][port]['product']  
      version = self.nm[self.host]['tcp'][port]['version']

      server_used = product + " " + version
      services_scanned.append(server_used)

      print(f"port: {port} - {state} ::: {server_used}")

    for service in services_scanned:
      self.attach_to_cve(service, server_used, email)
      
    with open(f"{self.BASE_DIR}/Scanners/scans.json", "r") as f:
            data = json.load(f)

    with open(f"{self.BASE_DIR}/Scanners/scans.json", "w") as f:
      data.update({email: {"exploits": self.all_exploits, "status": 2}})
      json.dump(data, f, indent=2)
      
  def attach_to_cve(self, server_used, service, email):
    with open(f"{self.BASE_DIR}/Scanners/vulns.json", "r+") as f:
      data = json.load(f)

      vuln_count = 0
      
      for x in range(len(data["Vulnerabilities"])):
        total_vuln = data["Vulnerabilities"][x]
        servers = total_vuln["server"]
        
        if server_used in servers:
          cve = total_vuln["CVE"]
          if cve in self.cve_list:
            continue
          
          vuln_count += 1
          self.cve_list.append(cve)
          severity = total_vuln["Severity"]
          description = total_vuln["Description"]
          vuln_type = total_vuln["Type"]

          self.all_exploits.append(f"{service}\n{vuln_type}\n{cve}\n{severity}\n{description}")

          
      

    